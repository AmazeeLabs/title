<?php

function title_system($field){
  $system["description"] = t("Enables users to link to stories, articles or similar content by title.");
  return $system[$field];
}


function title_page() {

  page_header();
  if (user_access("access content")) {

    $title = urldecode(arg(1));

    $number = ($title ? db_num_rows(db_query("SELECT nid FROM node WHERE title = '%s' AND status = 1", $title)) : 1);

    if ($number > 1) {
      $result = db_query("SELECT n.*, u.name, u.uid FROM node n LEFT JOIN users u ON n.uid = u.uid WHERE n.title = '%s' AND n.status = 1 ORDER BY created DESC", $title);

      while ($node = db_fetch_object($result)) {
        if (node_access("view", $node)) {
          $output .= "<p><b>". l($node->title, array("id" => $node->nid)) ."</b><br /><small>$node->type - ". format_name($node) ." - ". format_date($node->ccreated, "small") ."</small></p>";
        }
      }

      theme("header");
      theme("box", t("Result"), $output);
      theme("footer");
    }
    elseif ($number) {
      $node = ($title ? node_load(array("title" => $title, "status" => 1)) : node_load(array("status" => 1, "nid" => ($edit["id"] ? $edit["id"] : $id))));
      if (node_access("view", $node)) {
        if (isset($revision)) {
          $node = $node->revisions[$revision]["node"];
        }
        theme("header");
        node_view($node);
        theme("footer");
      }
      else {
        title_failure();
      }

    } 
    else {
      title_failure();
    }

  }
  else {
    theme("header");
    theme("box", t("Access denied"), message_access());
    theme("footer");
  }
}

// filter [node title|description] links. '|description' is optional.
function title_filter_link($text) {
  $pattern = '\[([^\|\]]+)(?>\|?)(.*?)\]';  // $1 == title: matches at least 1 char up to the first '|' or ']'
                                         // $2 == text: matches all after a following '|' (if there is) up to the next ']'. may include '|'s.
  $replacement = 'l("$2" ? "$2" : "$1", "title/". urlencode("$1"))';
  return preg_replace("/$pattern/e", $replacement, $text);
}

function title_conf_filters() {
  $output = form_select(t("Enable link tags"), "filter_link", variable_get("filter_link", 0), array(t("Disabled"), t("Enabled")), t("Enable Wiki-like [node title|text] links. This will generate a link labeled 'text' to the node with the title 'node title'. If you omit '|text', the label becomes 'node title'. Please be aware that you'll need to copy the title of the target node exactly in order to use this feature. Also note that there may be more than one node with a certain title. In this case, a list of matching nodes will be displayed."));
  $output .= "<hr />";
  return $output;
}
function title_failure() {

  theme("header");
  theme("box", t("Not found"), t("The node you are looking for does no longer exist or is not accessible without the proper access rights.") ."\n");
  theme("footer");
}

?>
