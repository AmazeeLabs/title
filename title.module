<?php

function title_system($field){
  $system["description"] = t("Enables users to link to stories, articles or similar content by title.");
  return $system[$field];
}

function title_page() {
  page_header();
  if (user_access("access content")) {

    theme("header");
    $title = urldecode(arg(1));
    $result = db_query("SELECT n.*, u.name, u.uid FROM node n LEFT JOIN users u ON n.uid = u.uid WHERE n.title = '%s' AND n.status = 1 ORDER BY created DESC", $title);
    if (!db_num_rows($result)) {
      // No node with exact title found, try substring.
      $result = db_query("SELECT n.*, u.name, u.uid FROM node n LEFT JOIN users u ON n.uid = u.uid WHERE n.title LIKE '%". check_query($title). "%' AND n.status = 1 ORDER BY created DESC");
    }  
    if (db_num_rows($result) == 0) { 
      theme("box", t("Matching Content"), t("No posts match the title '$title'"));
    }
    else if (db_num_rows($result) == 1) { 
      $row = db_fetch_object($result);
      $node = node_load(array("title" => $row->title, "status" => 1));
      if (node_access("view", $node)) {
        if (isset($revision)) {
          $node = $node->revisions[$revision]["node"];
        }
        node_view($node);
      }
    }  
    else {
      $output = t("<p>More than one post matches title: <i>$title</i></p>");
      while ($node = db_fetch_object($result)) {
        if (node_access("view", $node)) {
          $output .= "<p><b>". l($node->title, "node/view/$node->nid") ."</b><br /><small>$node->type - ". format_name($node) ." - ". format_date($node->created, "small") ."</small></p>";
        }
      }
      theme("box", t("Matching Posts"), $output);
    }
    theme("footer");
  }
  else {
    theme("header");
    theme("box", t("Access denied"), message_access());
    theme("footer");
  }
}

// filter [node title|description] links. '|description' is optional.
function title_filter_link($text) {
  $pattern = '\[([^\|\]]+)(?>\|?)(.*?)\]';  // $1 == title: matches at least 1 char up to the first '|' or ']'
                                         // $2 == text: matches all after a following '|' (if there is) up to the next ']'. may include '|'s.
  $replacement = 'l("$2" ? "$2" : "$1", "title/". urlencode("$1"))';
  return preg_replace("/$pattern/e", $replacement, $text);
}

function title_conf_filters() {
  $output = form_select(t("Enable link tags"), "filter_link", variable_get("filter_link", 0), array(t("Disabled"), t("Enabled")), t("Enable Wiki-like [node title|text] links. This will generate a link labeled 'text' to the node with the title 'node title'. If you omit '|text', the label becomes 'node title'. You may use a substring of a node title if desired. When multiple matching titles are found, a list of matching nodes will be displayed."));
  $output .= "<hr />";
  return $output;
}

?>
